// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: aserto/authorizer/v2/api/decision_logs.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Aserto.Authorizer.V2.API {

  /// <summary>Holder for reflection information generated from aserto/authorizer/v2/api/decision_logs.proto</summary>
  public static partial class DecisionLogsReflection {

    #region Descriptor
    /// <summary>File descriptor for aserto/authorizer/v2/api/decision_logs.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DecisionLogsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cixhc2VydG8vYXV0aG9yaXplci92Mi9hcGkvZGVjaXNpb25fbG9ncy5wcm90",
            "bxIYYXNlcnRvLmF1dGhvcml6ZXIudjIuYXBpGhxnb29nbGUvcHJvdG9idWYv",
            "c3RydWN0LnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3Rv",
            "Gi1hc2VydG8vYXV0aG9yaXplci92Mi9hcGkvcG9saWN5X2NvbnRleHQucHJv",
            "dG8aL2FzZXJ0by9hdXRob3JpemVyL3YyL2FwaS9pZGVudGl0eV9jb250ZXh0",
            "LnByb3RvGi5hc2VydG8vYXV0aG9yaXplci92Mi9hcGkvcG9saWN5X2luc3Rh",
            "bmNlLnByb3RvIocECghEZWNpc2lvbhIKCgJpZBgBIAEoCRItCgl0aW1lc3Rh",
            "bXAYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEgwKBHBhdGgY",
            "AyABKAkSNAoEdXNlchgEIAEoCzImLmFzZXJ0by5hdXRob3JpemVyLnYyLmFw",
            "aS5EZWNpc2lvblVzZXISOAoGcG9saWN5GAUgASgLMiguYXNlcnRvLmF1dGhv",
            "cml6ZXIudjIuYXBpLkRlY2lzaW9uUG9saWN5EkIKCG91dGNvbWVzGAYgAygL",
            "MjAuYXNlcnRvLmF1dGhvcml6ZXIudjIuYXBpLkRlY2lzaW9uLk91dGNvbWVz",
            "RW50cnkSKQoIcmVzb3VyY2UYByABKAsyFy5nb29nbGUucHJvdG9idWYuU3Ry",
            "dWN0EkgKC2Fubm90YXRpb25zGAggAygLMjMuYXNlcnRvLmF1dGhvcml6ZXIu",
            "djIuYXBpLkRlY2lzaW9uLkFubm90YXRpb25zRW50cnkSFgoJdGVuYW50X2lk",
            "GAkgASgJSACIAQEaLwoNT3V0Y29tZXNFbnRyeRILCgNrZXkYASABKAkSDQoF",
            "dmFsdWUYAiABKAg6AjgBGjIKEEFubm90YXRpb25zRW50cnkSCwoDa2V5GAEg",
            "ASgJEg0KBXZhbHVlGAIgASgJOgI4AUIMCgpfdGVuYW50X2lkImUKDERlY2lz",
            "aW9uVXNlchI6Cgdjb250ZXh0GAEgASgLMikuYXNlcnRvLmF1dGhvcml6ZXIu",
            "djIuYXBpLklkZW50aXR5Q29udGV4dBIKCgJpZBgCIAEoCRINCgVlbWFpbBgD",
            "IAEoCSLuAQoORGVjaXNpb25Qb2xpY3kSOAoHY29udGV4dBgBIAEoCzInLmFz",
            "ZXJ0by5hdXRob3JpemVyLnYyLmFwaS5Qb2xpY3lDb250ZXh0EhgKEHJlZ2lz",
            "dHJ5X3NlcnZpY2UYAiABKAkSFgoOcmVnaXN0cnlfaW1hZ2UYAyABKAkSFAoM",
            "cmVnaXN0cnlfdGFnGAQgASgJEhcKD3JlZ2lzdHJ5X2RpZ2VzdBgFIAEoCRJB",
            "Cg9wb2xpY3lfaW5zdGFuY2UYBiABKAsyKC5hc2VydG8uYXV0aG9yaXplci52",
            "Mi5hcGkuUG9saWN5SW5zdGFuY2VCXVpAZ2l0aHViLmNvbS9hc2VydG8tZGV2",
            "L2dvLWF1dGhvcml6ZXIvYXNlcnRvL2F1dGhvcml6ZXIvdjIvYXBpO2FwaaoC",
            "GEFzZXJ0by5BdXRob3JpemVyLlYyLkFQSWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Aserto.Authorizer.V2.API.PolicyContextReflection.Descriptor, global::Aserto.Authorizer.V2.API.IdentityContextReflection.Descriptor, global::Aserto.Authorizer.V2.API.PolicyInstanceReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Aserto.Authorizer.V2.API.Decision), global::Aserto.Authorizer.V2.API.Decision.Parser, new[]{ "Id", "Timestamp", "Path", "User", "Policy", "Outcomes", "Resource", "Annotations", "TenantId" }, new[]{ "TenantId" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Aserto.Authorizer.V2.API.DecisionUser), global::Aserto.Authorizer.V2.API.DecisionUser.Parser, new[]{ "Context", "Id", "Email" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Aserto.Authorizer.V2.API.DecisionPolicy), global::Aserto.Authorizer.V2.API.DecisionPolicy.Parser, new[]{ "Context", "RegistryService", "RegistryImage", "RegistryTag", "RegistryDigest", "PolicyInstance" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// represents a decision that an authorizer performed in the past
  /// </summary>
  public sealed partial class Decision : pb::IMessage<Decision>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Decision> _parser = new pb::MessageParser<Decision>(() => new Decision());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Decision> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Aserto.Authorizer.V2.API.DecisionLogsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Decision() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Decision(Decision other) : this() {
      id_ = other.id_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      path_ = other.path_;
      user_ = other.user_ != null ? other.user_.Clone() : null;
      policy_ = other.policy_ != null ? other.policy_.Clone() : null;
      outcomes_ = other.outcomes_.Clone();
      resource_ = other.resource_ != null ? other.resource_.Clone() : null;
      annotations_ = other.annotations_.Clone();
      tenantId_ = other.tenantId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Decision Clone() {
      return new Decision(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// unique id, replay a decision starting with this, also useful to de-dup
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    /// UTC time when the decision was made
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 3;
    private string path_ = "";
    /// <summary>
    /// Policy path used in decision
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 4;
    private global::Aserto.Authorizer.V2.API.DecisionUser user_;
    /// <summary>
    /// info about user for whom the decision as made
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Aserto.Authorizer.V2.API.DecisionUser User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "policy" field.</summary>
    public const int PolicyFieldNumber = 5;
    private global::Aserto.Authorizer.V2.API.DecisionPolicy policy_;
    /// <summary>
    /// info about policy used for the decision    
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Aserto.Authorizer.V2.API.DecisionPolicy Policy {
      get { return policy_; }
      set {
        policy_ = value;
      }
    }

    /// <summary>Field number for the "outcomes" field.</summary>
    public const int OutcomesFieldNumber = 6;
    private static readonly pbc::MapField<string, bool>.Codec _map_outcomes_codec
        = new pbc::MapField<string, bool>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForBool(16, false), 50);
    private readonly pbc::MapField<string, bool> outcomes_ = new pbc::MapField<string, bool>();
    /// <summary>
    /// outcome of the decisions specified in the policy context
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, bool> Outcomes {
      get { return outcomes_; }
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Struct resource_;
    /// <summary>
    /// the resource context used in a decision
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Resource {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    /// <summary>Field number for the "annotations" field.</summary>
    public const int AnnotationsFieldNumber = 8;
    private static readonly pbc::MapField<string, string>.Codec _map_annotations_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 66);
    private readonly pbc::MapField<string, string> annotations_ = new pbc::MapField<string, string>();
    /// <summary>
    /// annotations that may be added to a decision    
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Annotations {
      get { return annotations_; }
    }

    /// <summary>Field number for the "tenant_id" field.</summary>
    public const int TenantIdFieldNumber = 9;
    private string tenantId_;
    /// <summary>
    /// id of the tenant that generated the decision
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TenantId {
      get { return tenantId_ ?? ""; }
      set {
        tenantId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tenant_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTenantId {
      get { return tenantId_ != null; }
    }
    /// <summary>Clears the value of the "tenant_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTenantId() {
      tenantId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Decision);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Decision other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (Path != other.Path) return false;
      if (!object.Equals(User, other.User)) return false;
      if (!object.Equals(Policy, other.Policy)) return false;
      if (!Outcomes.Equals(other.Outcomes)) return false;
      if (!object.Equals(Resource, other.Resource)) return false;
      if (!Annotations.Equals(other.Annotations)) return false;
      if (TenantId != other.TenantId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (policy_ != null) hash ^= Policy.GetHashCode();
      hash ^= Outcomes.GetHashCode();
      if (resource_ != null) hash ^= Resource.GetHashCode();
      hash ^= Annotations.GetHashCode();
      if (HasTenantId) hash ^= TenantId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Timestamp);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Path);
      }
      if (user_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(User);
      }
      if (policy_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Policy);
      }
      outcomes_.WriteTo(output, _map_outcomes_codec);
      if (resource_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Resource);
      }
      annotations_.WriteTo(output, _map_annotations_codec);
      if (HasTenantId) {
        output.WriteRawTag(74);
        output.WriteString(TenantId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Timestamp);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Path);
      }
      if (user_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(User);
      }
      if (policy_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Policy);
      }
      outcomes_.WriteTo(ref output, _map_outcomes_codec);
      if (resource_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Resource);
      }
      annotations_.WriteTo(ref output, _map_annotations_codec);
      if (HasTenantId) {
        output.WriteRawTag(74);
        output.WriteString(TenantId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (policy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Policy);
      }
      size += outcomes_.CalculateSize(_map_outcomes_codec);
      if (resource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resource);
      }
      size += annotations_.CalculateSize(_map_annotations_codec);
      if (HasTenantId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TenantId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Decision other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::Aserto.Authorizer.V2.API.DecisionUser();
        }
        User.MergeFrom(other.User);
      }
      if (other.policy_ != null) {
        if (policy_ == null) {
          Policy = new global::Aserto.Authorizer.V2.API.DecisionPolicy();
        }
        Policy.MergeFrom(other.Policy);
      }
      outcomes_.Add(other.outcomes_);
      if (other.resource_ != null) {
        if (resource_ == null) {
          Resource = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Resource.MergeFrom(other.Resource);
      }
      annotations_.Add(other.annotations_);
      if (other.HasTenantId) {
        TenantId = other.TenantId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 26: {
            Path = input.ReadString();
            break;
          }
          case 34: {
            if (user_ == null) {
              User = new global::Aserto.Authorizer.V2.API.DecisionUser();
            }
            input.ReadMessage(User);
            break;
          }
          case 42: {
            if (policy_ == null) {
              Policy = new global::Aserto.Authorizer.V2.API.DecisionPolicy();
            }
            input.ReadMessage(Policy);
            break;
          }
          case 50: {
            outcomes_.AddEntriesFrom(input, _map_outcomes_codec);
            break;
          }
          case 58: {
            if (resource_ == null) {
              Resource = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Resource);
            break;
          }
          case 66: {
            annotations_.AddEntriesFrom(input, _map_annotations_codec);
            break;
          }
          case 74: {
            TenantId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 26: {
            Path = input.ReadString();
            break;
          }
          case 34: {
            if (user_ == null) {
              User = new global::Aserto.Authorizer.V2.API.DecisionUser();
            }
            input.ReadMessage(User);
            break;
          }
          case 42: {
            if (policy_ == null) {
              Policy = new global::Aserto.Authorizer.V2.API.DecisionPolicy();
            }
            input.ReadMessage(Policy);
            break;
          }
          case 50: {
            outcomes_.AddEntriesFrom(ref input, _map_outcomes_codec);
            break;
          }
          case 58: {
            if (resource_ == null) {
              Resource = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Resource);
            break;
          }
          case 66: {
            annotations_.AddEntriesFrom(ref input, _map_annotations_codec);
            break;
          }
          case 74: {
            TenantId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// information about a user on behalf of whom a decision was made
  /// </summary>
  public sealed partial class DecisionUser : pb::IMessage<DecisionUser>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DecisionUser> _parser = new pb::MessageParser<DecisionUser>(() => new DecisionUser());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DecisionUser> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Aserto.Authorizer.V2.API.DecisionLogsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecisionUser() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecisionUser(DecisionUser other) : this() {
      context_ = other.context_ != null ? other.context_.Clone() : null;
      id_ = other.id_;
      email_ = other.email_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecisionUser Clone() {
      return new DecisionUser(this);
    }

    /// <summary>Field number for the "context" field.</summary>
    public const int ContextFieldNumber = 1;
    private global::Aserto.Authorizer.V2.API.IdentityContext context_;
    /// <summary>
    /// identity context used in the decision
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Aserto.Authorizer.V2.API.IdentityContext Context {
      get { return context_; }
      set {
        context_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    /// <summary>
    /// id of the user the identity resolved to    
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 3;
    private string email_ = "";
    /// <summary>
    /// convinience human-readable identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DecisionUser);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DecisionUser other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Context, other.Context)) return false;
      if (Id != other.Id) return false;
      if (Email != other.Email) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (context_ != null) hash ^= Context.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (context_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Context);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Email);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (context_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Context);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Email);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (context_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Context);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DecisionUser other) {
      if (other == null) {
        return;
      }
      if (other.context_ != null) {
        if (context_ == null) {
          Context = new global::Aserto.Authorizer.V2.API.IdentityContext();
        }
        Context.MergeFrom(other.Context);
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (context_ == null) {
              Context = new global::Aserto.Authorizer.V2.API.IdentityContext();
            }
            input.ReadMessage(Context);
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            Email = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (context_ == null) {
              Context = new global::Aserto.Authorizer.V2.API.IdentityContext();
            }
            input.ReadMessage(Context);
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            Email = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// information about a policy used in a decision
  /// </summary>
  public sealed partial class DecisionPolicy : pb::IMessage<DecisionPolicy>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DecisionPolicy> _parser = new pb::MessageParser<DecisionPolicy>(() => new DecisionPolicy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DecisionPolicy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Aserto.Authorizer.V2.API.DecisionLogsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecisionPolicy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecisionPolicy(DecisionPolicy other) : this() {
      context_ = other.context_ != null ? other.context_.Clone() : null;
      registryService_ = other.registryService_;
      registryImage_ = other.registryImage_;
      registryTag_ = other.registryTag_;
      registryDigest_ = other.registryDigest_;
      policyInstance_ = other.policyInstance_ != null ? other.policyInstance_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecisionPolicy Clone() {
      return new DecisionPolicy(this);
    }

    /// <summary>Field number for the "context" field.</summary>
    public const int ContextFieldNumber = 1;
    private global::Aserto.Authorizer.V2.API.PolicyContext context_;
    /// <summary>
    /// policy context used in the decision
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Aserto.Authorizer.V2.API.PolicyContext Context {
      get { return context_; }
      set {
        context_ = value;
      }
    }

    /// <summary>Field number for the "registry_service" field.</summary>
    public const int RegistryServiceFieldNumber = 2;
    private string registryService_ = "";
    /// <summary>
    /// registry service where policy was retrieved from (e.g. opcr.io)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RegistryService {
      get { return registryService_; }
      set {
        registryService_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "registry_image" field.</summary>
    public const int RegistryImageFieldNumber = 3;
    private string registryImage_ = "";
    /// <summary>
    /// image of the policy in the registry, including org (e.g. acmecorp/peoplefinder-abac)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RegistryImage {
      get { return registryImage_; }
      set {
        registryImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "registry_tag" field.</summary>
    public const int RegistryTagFieldNumber = 4;
    private string registryTag_ = "";
    /// <summary>
    /// tag of the policy image (e.g. 0.8.2 or latest)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RegistryTag {
      get { return registryTag_; }
      set {
        registryTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "registry_digest" field.</summary>
    public const int RegistryDigestFieldNumber = 5;
    private string registryDigest_ = "";
    /// <summary>
    /// digest of the policy image 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RegistryDigest {
      get { return registryDigest_; }
      set {
        registryDigest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "policy_instance" field.</summary>
    public const int PolicyInstanceFieldNumber = 6;
    private global::Aserto.Authorizer.V2.API.PolicyInstance policyInstance_;
    /// <summary>
    /// policy instance used in decision
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Aserto.Authorizer.V2.API.PolicyInstance PolicyInstance {
      get { return policyInstance_; }
      set {
        policyInstance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DecisionPolicy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DecisionPolicy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Context, other.Context)) return false;
      if (RegistryService != other.RegistryService) return false;
      if (RegistryImage != other.RegistryImage) return false;
      if (RegistryTag != other.RegistryTag) return false;
      if (RegistryDigest != other.RegistryDigest) return false;
      if (!object.Equals(PolicyInstance, other.PolicyInstance)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (context_ != null) hash ^= Context.GetHashCode();
      if (RegistryService.Length != 0) hash ^= RegistryService.GetHashCode();
      if (RegistryImage.Length != 0) hash ^= RegistryImage.GetHashCode();
      if (RegistryTag.Length != 0) hash ^= RegistryTag.GetHashCode();
      if (RegistryDigest.Length != 0) hash ^= RegistryDigest.GetHashCode();
      if (policyInstance_ != null) hash ^= PolicyInstance.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (context_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Context);
      }
      if (RegistryService.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RegistryService);
      }
      if (RegistryImage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RegistryImage);
      }
      if (RegistryTag.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RegistryTag);
      }
      if (RegistryDigest.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RegistryDigest);
      }
      if (policyInstance_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PolicyInstance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (context_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Context);
      }
      if (RegistryService.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RegistryService);
      }
      if (RegistryImage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RegistryImage);
      }
      if (RegistryTag.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RegistryTag);
      }
      if (RegistryDigest.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RegistryDigest);
      }
      if (policyInstance_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PolicyInstance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (context_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Context);
      }
      if (RegistryService.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegistryService);
      }
      if (RegistryImage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegistryImage);
      }
      if (RegistryTag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegistryTag);
      }
      if (RegistryDigest.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegistryDigest);
      }
      if (policyInstance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PolicyInstance);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DecisionPolicy other) {
      if (other == null) {
        return;
      }
      if (other.context_ != null) {
        if (context_ == null) {
          Context = new global::Aserto.Authorizer.V2.API.PolicyContext();
        }
        Context.MergeFrom(other.Context);
      }
      if (other.RegistryService.Length != 0) {
        RegistryService = other.RegistryService;
      }
      if (other.RegistryImage.Length != 0) {
        RegistryImage = other.RegistryImage;
      }
      if (other.RegistryTag.Length != 0) {
        RegistryTag = other.RegistryTag;
      }
      if (other.RegistryDigest.Length != 0) {
        RegistryDigest = other.RegistryDigest;
      }
      if (other.policyInstance_ != null) {
        if (policyInstance_ == null) {
          PolicyInstance = new global::Aserto.Authorizer.V2.API.PolicyInstance();
        }
        PolicyInstance.MergeFrom(other.PolicyInstance);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (context_ == null) {
              Context = new global::Aserto.Authorizer.V2.API.PolicyContext();
            }
            input.ReadMessage(Context);
            break;
          }
          case 18: {
            RegistryService = input.ReadString();
            break;
          }
          case 26: {
            RegistryImage = input.ReadString();
            break;
          }
          case 34: {
            RegistryTag = input.ReadString();
            break;
          }
          case 42: {
            RegistryDigest = input.ReadString();
            break;
          }
          case 50: {
            if (policyInstance_ == null) {
              PolicyInstance = new global::Aserto.Authorizer.V2.API.PolicyInstance();
            }
            input.ReadMessage(PolicyInstance);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (context_ == null) {
              Context = new global::Aserto.Authorizer.V2.API.PolicyContext();
            }
            input.ReadMessage(Context);
            break;
          }
          case 18: {
            RegistryService = input.ReadString();
            break;
          }
          case 26: {
            RegistryImage = input.ReadString();
            break;
          }
          case 34: {
            RegistryTag = input.ReadString();
            break;
          }
          case 42: {
            RegistryDigest = input.ReadString();
            break;
          }
          case 50: {
            if (policyInstance_ == null) {
              PolicyInstance = new global::Aserto.Authorizer.V2.API.PolicyInstance();
            }
            input.ReadMessage(PolicyInstance);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
